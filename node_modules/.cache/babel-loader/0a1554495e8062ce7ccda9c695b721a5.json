{"ast":null,"code":"var _jsxFileName = \"/Users/rachaelghorbani/Flatiron/code/Mod4/labs/module-4-practice-todo-nyc01-seng-ft-080320/src/Containers/App.js\";\nimport React from 'react';\nimport '../App.css';\nimport CategoriesForm from '../Components/CategoriesForm';\nimport { CATEGORIES } from '../Components/data';\nimport TasksContainer from '../Containers/TasksContainer';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tasks: [],\n      category: 'All',\n      taskToEdit: {\n        text: '',\n        category: ''\n      }\n    };\n\n    this.componentDidMount = () => {\n      fetch('http://localhost:3000/tasks').then(resp => resp.json()).then(tasks => {\n        this.setState({\n          tasks\n        });\n      });\n    };\n\n    this.deleteClickHandler = taskObj => {\n      const options = {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify(taskObj)\n      };\n      fetch(`http://localhost:3000/tasks/${taskObj.id}`, options).then(resp => resp.json()).then(() => {\n        const currentState = [...this.state.tasks];\n        const filtered = currentState.filter(task => {\n          return task.text !== taskObj.text;\n        });\n        this.setState({\n          tasks: filtered\n        });\n      });\n    };\n\n    this.newTaskSubmitHandler = taskObj => {\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify(taskObj)\n      };\n\n      if (taskObj.text !== '') {\n        fetch('http://localhost:3000/tasks', options).then(resp => resp.json()).then(newTask => {\n          const newArr = [...this.state.tasks, newTask];\n          this.setState({\n            tasks: newArr\n          });\n        });\n      }\n    };\n\n    this.categoryClickHandler = e => {\n      const prevCategory = this.state.category;\n      const allButtons = document.querySelectorAll('button');\n\n      for (let button of allButtons) {\n        if (button.innerText === prevCategory) {\n          button.classList.remove('selected');\n        }\n      }\n\n      e.target.classList.add('selected');\n      this.setState({\n        category: e.target.innerText\n      });\n    };\n\n    this.editHandler = taskObj => {\n      this.setState({\n        taskToEdit: taskObj\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        taskToEdit: { ...this.state.taskToEdit,\n          [e.target.name]: e.target.value\n        }\n      });\n    };\n\n    this.editSubmitHandler = e => {\n      const options = {\n        method: \"PATCH\",\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/json'\n        },\n        body: JSON.stringify(this.state.taskToEdit)\n      };\n      fetch(`http://localhost:3000/tasks/${this.state.taskToEdit.id}`, options).then(resp => resp.json()).then(editedTask => {\n        const newArr = [...this.state.tasks];\n        const oldTask = newArr.find(task => task.id === this.state.taskToEdit.id);\n        const index = newArr.indexOf(oldTask);\n        console.log(index);\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, \"My tasks\"), /*#__PURE__*/React.createElement(CategoriesForm, {\n      clickHandler: this.categoryClickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(TasksContainer, {\n      editSubmitHandler: this.editSubmitHandler,\n      changeHandlerForEdit: this.onChange,\n      taskToEdit: this.state.taskToEdit,\n      editHandler: this.editHandler,\n      deleteClickHandler: this.deleteClickHandler,\n      tasks: this.state.tasks,\n      category: this.state.category,\n      submitHandler: this.newTaskSubmitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/rachaelghorbani/Flatiron/code/Mod4/labs/module-4-practice-todo-nyc01-seng-ft-080320/src/Containers/App.js"],"names":["React","CategoriesForm","CATEGORIES","TasksContainer","App","Component","state","tasks","category","taskToEdit","text","componentDidMount","fetch","then","resp","json","setState","deleteClickHandler","taskObj","options","method","headers","Accept","body","JSON","stringify","id","currentState","filtered","filter","task","newTaskSubmitHandler","newTask","newArr","categoryClickHandler","e","prevCategory","allButtons","document","querySelectorAll","button","innerText","classList","remove","target","add","editHandler","onChange","name","value","editSubmitHandler","editedTask","oldTask","find","index","indexOf","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport CategoriesForm from '../Components/CategoriesForm';\nimport { CATEGORIES } from '../Components/data';\nimport TasksContainer from '../Containers/TasksContainer';\n\nclass App extends React.Component {\n\tstate = {\n\t\ttasks: [],\n\t\tcategory: 'All',\n\t\ttaskToEdit: {\n\t\t\ttext: '',\n\t\t\tcategory: ''\n\t\t}\n\t};\n\n\tcomponentDidMount = () => {\n\t\tfetch('http://localhost:3000/tasks').then((resp) => resp.json()).then((tasks) => {\n\t\t\tthis.setState({ tasks });\n\t\t});\n\t};\n\n\tdeleteClickHandler = (taskObj) => {\n\t\tconst options = {\n\t\t\tmethod: 'DELETE',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(taskObj)\n\t\t};\n\t\tfetch(`http://localhost:3000/tasks/${taskObj.id}`, options).then((resp) => resp.json()).then(() => {\n\t\t\tconst currentState = [ ...this.state.tasks ];\n\t\t\tconst filtered = currentState.filter((task) => {\n\t\t\t\treturn task.text !== taskObj.text;\n\t\t\t});\n\t\t\tthis.setState({ tasks: filtered });\n\t\t});\n\t};\n\n\tnewTaskSubmitHandler = (taskObj) => {\n\t\tconst options = {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(taskObj)\n\t\t};\n\t\tif (taskObj.text !== '') {\n\t\t\tfetch('http://localhost:3000/tasks', options).then((resp) => resp.json()).then((newTask) => {\n\t\t\t\tconst newArr = [ ...this.state.tasks, newTask ];\n\t\t\t\tthis.setState({ tasks: newArr });\n\t\t\t});\n\t\t}\n\t};\n\n\tcategoryClickHandler = (e) => {\n\t\tconst prevCategory = this.state.category;\n\t\tconst allButtons = document.querySelectorAll('button');\n\t\tfor (let button of allButtons) {\n\t\t\tif (button.innerText === prevCategory) {\n\t\t\t\tbutton.classList.remove('selected');\n\t\t\t}\n\t\t}\n\t\te.target.classList.add('selected');\n\t\tthis.setState({ category: e.target.innerText });\n\t};\n\n\teditHandler = (taskObj) => {\n\t\tthis.setState({ taskToEdit: taskObj });\n\t};\n\n\tonChange = (e) => {\n\t\tthis.setState({\n\t\t\ttaskToEdit: {\n\t\t\t\t...this.state.taskToEdit,\n\t\t\t\t[e.target.name]: e.target.value\n\t\t\t}\n\t\t});\n\t};\n\n\teditSubmitHandler = e => {\n        const options = {\n            method: \"PATCH\",\n            headers: {\n                'Content-Type': 'application/json',\n\t\t\t\tAccept: 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(this.state.taskToEdit)\n        }\n\n        fetch(`http://localhost:3000/tasks/${this.state.taskToEdit.id}`, options)\n        .then(resp => resp.json())\n        .then(editedTask => {\n            const newArr = [...this.state.tasks]\n            const oldTask = newArr.find(task => task.id === this.state.taskToEdit.id)\n            const index = newArr.indexOf(oldTask)\n            console.log(index)\n        })\n    };\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h2>My tasks</h2>\n\t\t\t\t<CategoriesForm clickHandler={this.categoryClickHandler} />\n\t\t\t\t<TasksContainer\n\t\t\t\t\teditSubmitHandler={this.editSubmitHandler}\n\t\t\t\t\tchangeHandlerForEdit={this.onChange}\n\t\t\t\t\ttaskToEdit={this.state.taskToEdit}\n\t\t\t\t\teditHandler={this.editHandler}\n\t\t\t\t\tdeleteClickHandler={this.deleteClickHandler}\n\t\t\t\t\ttasks={this.state.tasks}\n\t\t\t\t\tcategory={this.state.category}\n\t\t\t\t\tsubmitHandler={this.newTaskSubmitHandler}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}